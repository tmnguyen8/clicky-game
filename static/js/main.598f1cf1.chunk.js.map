{"version":3,"sources":["components/NavTabs/NavTabs.js","components/Banner/Banner.js","components/Wrapper/ImageCard/ImageCard.js","components/Wrapper/Wrapper.js","App.js","index.js"],"names":["NavTabs","props","className","resultMessage","score","totalScore","Banner","ImageCard","alt","id","src","image","onClick","handleClick","Wrapper","children","App","state","images","guessedArr","event","target","handleGuessed","setState","displayRandomImage","newGuessArr","push","parseInt","length","handleWin","originalArr","randomArrIndex","randomArrResult","r","Math","floor","random","indexOf","map","index","this","includes","key","count","Component","ReactDOM","render","document","getElementById"],"mappings":"wiDAoBeA,MAjBf,SAAkBC,GACd,OACE,yBAAKC,UAAU,eACb,yBAAKA,UAAU,SACb,4CAEF,yBAAKA,UAAU,SACb,4BAAKD,EAAME,gBAEb,yBAAKD,UAAU,SACX,uCAAaD,EAAMG,MAAnB,cAAqCH,EAAMI,e,MCDxCC,MATf,WACI,OACI,yBAAKJ,UAAU,aACX,4CACA,0G,aCMGK,MAVf,SAAmBN,GACjB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKM,IAAKP,EAAMQ,GAAIC,IAAKT,EAAMU,MAAOC,QAASX,EAAMY,iB,MCA9CC,MAJf,SAAiBb,GACf,OAAO,yBAAKC,UAAU,qBAAqBD,EAAMc,WCsGpCC,E,2MAhGbC,MAAQ,CACNC,OAAQA,EACRd,MAAO,EACPC,WAAY,EACZc,WAAY,GACZhB,cAAe,I,EAsCjBU,YAAc,SAAAO,GAAU,IACfZ,EAAOY,EAAMC,OAAbb,IAEP,GAAI,EAAKc,cAAcd,GACrB,EAAKe,SAAS,CACZL,OAAQ,EAAKM,mBAAmB,EAAKP,MAAMC,QAC3Cf,cAAe,8CAGZ,CACL,IAAIsB,EAAc,EAAKR,MAAME,WAC7BM,EAAYC,KAAKC,SAASnB,IAE1B,EAAKe,SAAS,CACZnB,MAAOqB,EAAYG,OACnBT,WAAYM,EACZP,OAAQ,EAAKM,mBAAmB,EAAKP,MAAMC,QAC3Cf,cAAe,aAGnB,EAAK0B,a,kFAtDYC,GAGjB,IAFA,IAAIC,EAAiB,GACjBC,EAAkB,GAChBD,EAAeH,OAAS,IAAG,CAC/B,IAAIK,EAAIC,KAAKC,MAAsB,GAAhBD,KAAKE,WACU,IAA/BL,EAAeM,QAAQJ,IAAWF,EAAeL,KAAKO,GAI3D,OADAF,EAAeO,KAAI,SAACC,GAAD,OAASP,EAAgBN,KAAKI,EAAYS,OACtDP,I,oCAIKxB,GACZ,QAAIgC,KAAKvB,MAAME,WAAWsB,SAASd,SAASnB,M,kCASP,KAAjCgC,KAAKvB,MAAME,WAAWS,QACxBY,KAAKjB,SAAS,CACZpB,cAAe,WACfE,WAAYmC,KAAKvB,MAAMZ,WAAa,EACpCD,MAAO,EACPe,WAAY,O,+BA8BR,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,CACEf,MAAOoC,KAAKvB,MAAMb,MAClBD,cAAeqC,KAAKvB,MAAMd,cAC1BE,WAAYmC,KAAKvB,MAAMZ,aAEzB,kBAAC,EAAD,MACA,kBAAC,EAAD,KAEImC,KAAKvB,MAAMC,OAAOoB,KAAI,SAAA3B,GAAK,OACzB,kBAAC,EAAD,CACEF,GAAIE,EAAMF,GACViC,IAAK/B,EAAMF,GACXD,IAAKG,EAAMF,GACXE,MAAOA,EAAMA,MACbgC,MAAO,EAAK1B,MAAM0B,MAClB9B,YAAa,EAAKA,uB,GAvFhB+B,aCJlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.598f1cf1.chunk.js","sourcesContent":["import React  from \"react\";\nimport \"./NavTabs.css\";\n\nfunction NavTabs (props) {\n    return (\n      <div className=\"row nav-bar\">\n        <div className=\"col-4\">\n          <h2>Clicky Game</h2>\n        </div>\n        <div className=\"col-4\">\n          <h2>{props.resultMessage}</h2>\n        </div>\n        <div className=\"col-4\">\n            <h2>Score = {props.score} | Total = {props.totalScore}</h2>\n        </div>  \n      </div>\n\n    );\n}\n\nexport default NavTabs;\n\n","import React from \"react\";\nimport \"./Banner.css\";\n\nfunction Banner () {\n    return (\n        <div className=\"container\">\n            <h1>Clicky Game!</h1>\n            <h3>Click on an image to earn points, but don't click on any more than once!</h3>\n        </div>\n    )\n}\n\nexport default Banner;","import React from \"react\";\nimport \"./ImageCard.css\";\n\nfunction ImageCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.id} src={props.image} onClick={props.handleClick}/>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageCard;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper jumbotron\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React, {Component} from \"react\";\nimport NavTabs from \"./components/NavTabs/NavTabs\";\nimport Banner from \"./components/Banner/Banner\";\nimport images from \"./images.json\"\n\nimport ImageCard from \"./components/Wrapper/ImageCard/ImageCard\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\n\nclass App extends Component {\n  // Setting this.state.images to the images json array\n  state = {\n    images: images,\n    score: 0,\n    totalScore: 0,\n    guessedArr: [],\n    resultMessage: \"\"\n  };\n\n  // Generating an array in random from 0-11\n  displayRandomImage(originalArr) {\n    var randomArrIndex = [];\n    var randomArrResult = [];\n    while(randomArrIndex.length < 12){\n      var r = Math.floor(Math.random() * 12);\n      if(randomArrIndex.indexOf(r) === -1) randomArrIndex.push(r);\n    }\n\n    randomArrIndex.map((index)=>randomArrResult.push(originalArr[index]))\n    return randomArrResult\n  }\n\n  // function to handle the guess has been guessed before or not by checking the array guessedArr\n  handleGuessed(alt) {\n    if (this.state.guessedArr.includes(parseInt(alt))) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  // function to see if the user has won\n  handleWin() {\n    if (this.state.guessedArr.length === 12) {\n      this.setState({\n        resultMessage: \"You Win!\",\n        totalScore: this.state.totalScore + 1,\n        score: 0,\n        guessedArr: []\n      })\n    }\n  }\n\n  // Handle OnChange click\n  handleClick = event => {\n    const {alt} = event.target;\n    // If you have guessed this Image\n    if (this.handleGuessed(alt)){\n      this.setState({\n        images: this.displayRandomImage(this.state.images),\n        resultMessage: \"Wrong! You have guessed this already.\"\n      }); \n    // else You have NOT guessed this Image yet\n    } else {\n      var newGuessArr = this.state.guessedArr\n      newGuessArr.push(parseInt(alt))\n\n      this.setState({\n        score: newGuessArr.length,\n        guessedArr: newGuessArr,\n        images: this.displayRandomImage(this.state.images),\n        resultMessage: \"Correct!\"\n      })\n    }\n    this.handleWin()\n  }\n\n  // Map over this.state.images and render a ImageCard component for each image object\n  render() {\n    return (\n      <div>\n        <NavTabs \n          score={this.state.score}\n          resultMessage={this.state.resultMessage}\n          totalScore={this.state.totalScore}\n        />\n        <Banner />\n        <Wrapper>\n          {\n            this.state.images.map(image =>(\n              <ImageCard \n                id={image.id}\n                key={image.id}\n                alt={image.id}\n                image={image.image}\n                count={this.state.count}\n                handleClick={this.handleClick}\n              />\n            ))\n          }\n\n        </Wrapper>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}